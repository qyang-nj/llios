name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:

# Cancel previous jobs if a new one is started
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  macho-parser:
    name: Macho Parser
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./macho_parser
    steps:
      - uses: actions/checkout@v2
      - run: brew install openssl
      - run: ./build.sh
      - run: ./build.sh --debug
      - run: ./build.sh --openssl
      # Tests with sample.out
      - run: ./build_sample.sh
      - run: ./macho_parser --help
      - run: ./macho_parser sample.out
      - run: ./macho_parser sample.out --segments
      - run: ./macho_parser sample.out --symtab
      - run: ./macho_parser sample.out --section __cstring
      # Tests with coverage
      - run: cd ../testing/code_coverage && ./build_and_test.sh && cd -
      - run: ./macho_parser ../testing/code_coverage/build/Test.xctest/Test --section __llvm_covmap
      - run: ./macho_parser ../testing/code_coverage/build/Test.xctest/Test --section __llvm_covfun
      - run: ./macho_parser ../testing/code_coverage/build/Test.xctest/Test --section __llvm_prf_names
      # Tests code signature
      - run: ./macho_parser tests/fixtures/code_signature/main_sha1 --code-signature --code-directory --entitlement
      - run: ./macho_parser tests/fixtures/code_signature/main_sha256 --code-signature --code-directory --entitlement

  macho-parser-bazel:
    name: Macho Parser (Bazel)
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./macho_parser
    steps:
      - uses: actions/checkout@v2
      - run: bazelisk build //:macho_parser
      - run: bazelisk test --test_output=all //:unit_tests

  build-ios-app:
    name: Build iOS App without Xcode
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./build_ios_app
    steps:
      - uses: actions/checkout@v2
      - run: ./build.sh
      - run: ./build.sh --release
